
on:
  push:
    branches:
      - main # Запускать при пуше в ветку main
  workflow_dispatch: # Позволяет запускать вручную из вкладки "Actions"

jobs:
  build:
    runs-on: ubuntu-latest # Используем последнюю версию Ubuntu в качестве виртуальной машины (обычно 4 ядра CPU, 7GB RAM)

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Скачиваем ваш репозиторий
      
      
        
      - name: Set up build environment
        run: |
           echo "Installing essential build dependencies..."
           sudo apt update
           sudo apt install -y build-essential clang flex bison g++ gawk \
           gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
           python3-setuptools rsync swig unzip zlib1g-dev file wget \
           libtraceevent-dev systemtap-sdt-dev libslang2-dev
           echo "Dependencies installed."
      
          

      - name: Free Disk Space
        uses: endersonmenezes/free-disk-space@main
        with:
          remove_android: true
          remove_dotnet: true
          remove_haskell: true
          remove_tool_cache: true
          remove_swap: true
          remove_packages: "android* azure* clang* dotnet* firefox* ghc* golang* google* libclang* libgl1* \
            lld* llvm* microsoft* mongodb* mono* mysql* nodejs* openjdk* php* postgresql* powershell* snap* temurin* yarn* zulu*"
          remove_packages_one_command: true
          remove_folders: "/etc/apt/sources.list.d* /etc/mono* /etc/mysql* /usr/include/linux/android* /usr/lib/llvm* /usr/lib/mono* \
            /usr/local/lib/android* /usr/local/lib/node_modules* /usr/local/share/chromium* /usr/local/share/powershell* /usr/local/share/vcpkg/ports/azure* \
            /usr/local/share/vcpkg/ports/google* /usr/local/share/vcpkg/ports/libpq/android* /usr/local/share/vcpkg/ports/llvm* /usr/local/share/vcpkg/ports/mysql* \
            /usr/local/share/vcpkg/ports/snap* /usr/share/azure* /usr/share/dotnet* /usr/share/glade* /usr/share/miniconda* /usr/share/php* /usr/share/swift \
            /var/lib/mysql* /var/log/azure*"
          testing: false
      
      
      
      - name: Show System Information
        run: |
          echo "Disk space:"
          df -h
          echo "CPU Cores:"
          nproc

      - name: Run OpenWrt Build Script
        run: |
          echo "Making build script executable..."
          chmod +x bpi-r4-openwrt-builder.sh

          echo "Starting OpenWrt build process with your script..."
          ./bpi-r4-openwrt-builder.sh

          echo "Build script finished. Checking for compiled firmware..."


      - name: Compress all packages
        run: |
          cd openwrt;
          tar caf bin/targets/mediatek/filogic/packages.tar.gz bin/targets/mediatek/filogic/packages

      - name: Add config file
        run: |
          cd openwrt;
          cp .config  bin/targets/mediatek/filogic/config-full

      - name: Package output
        run: |
          cd openwrt;
          tar -cvf ../bpi_r4-images.tar bin/targets/mediatek/filogic

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bpi_r4-images
          path: bpi_r4-images.tar

  release:
    name: Create release
    needs: [build]
    if: needs.build.result == 'success'
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bpi_r4-images

      - name: Extract artifacts
        run: tar xf bpi_r4-images.tar

      - name: Get current date
        run: echo "RELEASE_DATE=$(date +%F)" >> $GITHUB_ENV

      - name: Create release
        uses: softprops/action-gh-release@master
        with:
          files: bin/targets/mediatek/filogic/*
          tag_name: ${{ env.RELEASE_DATE }}
          name: OpenWRT BPI-R4 with MTK Feed with my packages - ${{ env.RELEASE_DATE }}
          body: |
            Updated prebuilt images for BPI-R4 with MTK feed and my custom packages

            
      - name: Clean up old releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 5
          delete_tags: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
